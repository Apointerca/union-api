FORMAT: 1A
HOST: http://apointer.ca

# API documentation for Union

# Group General
Please refer to [Decision Graph](http://clojure-liberator.github.io/liberator/assets/img/decision-graph.svg) for details.  

## General HTTP status code
As HTTP status code contains a lot of information, here we demonstration some of them so we can use them directly in our response.  

### 200
This is the most common status code. It basically means things are going well.  
But usually it returns together with response body.  
Mostly for `GET` request.  

### 201
This status code indicates the requested resource has been created.  
Response body should be returned together.  
Mostly for `POST` request.  

### 204
Similar to `200`, but nothing would come together with this status.  
Mostly for `DELETE` and `PUT` requests.  

## General HTTP status error code

To avoid redundent error code declaration, here we list all the default meaning of corresponding error code.  
Please explicitly in each response if the response is different from what state here.  

### 400
Malformed request, this request is reported.  
### 401
This request is not authorized.  
### 403
This request doesn't have permission to access the resource.  
### 404
The target resource not found.  
### 405
HTTP request method not found.  
### 406
The request parameters and headers not acceptable.  
Please change it according to documentation.  
### 409
Usually happens when creating a resource that already exists.  

# Data Structure

## Pagination (object)
+ pageNumber: `1` (number, required) - The current page number, start from `1`
+ pageSize: `10` (number, required) - The number of record in each page. The minimum size is `5`
+ totalPage: `3` (number, required) - The total number of pages, minimum is `1`

# Data Structure

### Get Simple Category (object)
+ cid: `10` (number, required) - The ID of category
+ name: `The test` (string, required) - The name of category

### Get Category Response (object)
+ cid: `1` (number, required) - The ID of category
+ name: `Medical Treatment` (string, required) - The name of category
+ description: `something here` (string, optional)
+ avatar: `http://host/path` (string, optional)
+ parentCid (number, optional) - The parent of this category. Null or blank value indicates this is a root category
+ children (array[Get Simple Category], fixed) - A list of sub-category under current category

# Group Category

## Category CRUD [/category/{id}]

### Get category by ID [GET]
+ Parameters
    + id: `12` (number, required) - ID of category

+ response 200 (application/json)
    + Attributes (Get Category Response)

## Root Category [/category]

### Get all root category [GET]

+ response 200 (application/json)
    + Attributes (array[Get Simple Category], fixed)
# Data Structure

### Get Business Response (object)
+ bid: `1` (number, required) - The Id of this business
+ name: `Rugal Dental Clinic` (string, required)
+ license: `123-3321-2123-3321` (string, required)
+ phone: `1234567890` (string, optional)
+ email: `test@email.com` (string, optional)
+ backgroundImage: `http://host/path` (string, optional) - The background image of this business
+ avatar: `http://host/path` (string, optional) - The avatar of this business
+ website: `http://host/path` (string, optional) - The URL of this business

### Save Business Request (object)
+ name: `Rugal Auto Service` (string, required)
+ license: `123-3321-2123-3321` (string, required)
+ uid: `13` (number, required) - The Uid of the business owner

### Update Business Request (object)
+ name: `Rugal Auto Service` (string, optional)
+ phone: `1234567890` (string, optional)
+ email: `test@email.com` (string, optional)
+ website: `http://host/path` (string, optional) - The URL of this business

### Create Store (object)
+ sid: `2` (number, required) - The Id of store
+ businessId: `1` (number, required) - The Id of business associated with the store

### Get Stores (object)
+ sid: `2` (number, required) - The Id of store
+ name: `Rugal Automobile Yonge Finch shop` (string, optional)

# Group Business

## Business CRUD [/business/{id}]

### Get business by ID [GET]
+ Parameters
    + id: `1` (number, required) - ID of business

+ response 200 (application/json)
    + Attributes (Get Business Response)

### Update business by ID [PUT]
+ Parameters
    + id: `1` (number, required) - ID of business

+ request
    + Attributes (Update Business Request)

+ response 204
    + Body

### Save business [POST]
Create the business along with the first store and full permission workspace.  
This should only be called after verifying business information.  

+ request
    + Attributes (Save Business Request)

+ response 201 (application/json)
    + Attributes (Create Store)

## Store under Business Operation [/business/{id}/store]

### Get Store Under Business [GET]
+ Parameters
    + id: `1` (number, required) - ID of business

+ response 200 (application/json)
    + Attributes (array[Get Stores], fixed)

## Avatar Operation [/business/{id}/avatar]

### Update Business Avatar [POST]
Please use `name=file` and set the `filename` as the original file name.  
Do not forget to set the `Content-Type`. Â 

+ Parameters
    + id: `1` (number, required) - ID of business

+ Request (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="file"; filename="image.jpg"
        Content-Type: image/jpeg
        Content-Transfer-Encoding: base64

        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY

+ response 201
    + Body

+ response 503
This means Aws S3 is down.  
    + Body
# Data Structure

### Update Address (object)
+ line1: `123 test rd` (string, optional)
+ line2: `special line` (string, optional)
+ city: `Toronto` (string, optional)
+ province: `Ontario` (string, optional)
+ country: `Canada` (string, optional)
+ zip: `X0X0X0` (string, optional)

### Address Response (object)
+ aid: `23` (number, required) - The Id of address
+ line1: `123 test rd` (string, required)
+ line2: `special line` (string, optional)
+ city: `Toronto` (string, required)
+ province: `Ontario` (string, required)
+ country: `Canada` (string, required)
+ zip: `X0X0X0` (string, required)
+ longitude: `12.34` (number, optional)
+ latitude: `21.43` (number, optional)

### Business Hour Response (object)
+ weekDay: `3` (number, required) - The day in one week, from `1` to `7` to indicate `Monday` to `Sunday`
+ beginAt: `915` (number, required) - The begin time of a day, from `0` to `2400` to indicate hour and minute
+ endAt: `1730` (number, required) - The begin time of a day, from `0` to `2400` to indicate hour and minute

### Get Store Response (object)
+ sid: `1` (number, required) - The Id of this Store
+ cid: `3` (number, required) - The category Id of this store
+ bid: `6` (number, required) - The business Id of this store
+ timezone: `-4` (number, required)
+ address (Address Response, required)
+ businessHours (array[Business Hour Response], fixed) - A list of business hour of this store, order by day of week
+ name: `Rugal Dental Clinic` (string, required)
+ description: `This is description` (string, optional)
+ phone: `1234567890` (string, required)
+ email: `test@email.com` (string, required)
+ website: `http://host.com` (string, optional)

### Update Store Request (object)
+ cid: `3` (number, optional) - The category Id of this store
+ timezone: `-1` (number, optional)
+ address (Update Address, optional)
+ name: `Rugal Dental Clinic` (string, optional)
+ description: `This is description` (string, optional)
+ phone: `1234567890` (string, optional)
+ email: `test@email.com` (string, optional)
+ website: `http://host.com` (string, optional)

### Update Business Hours Request (object)
+ businessHours (array[Business Hour Response], fixed)

# Group Store

## Store CRUD [/store/{id}]

### Get Store by ID [GET]
+ Parameters
    + id: `1` (number, required) - ID of Store

+ response 200 (application/json)
    + Attributes (Get Store Response)

### Update Store by ID [PUT]
+ Parameters
    + id: `1` (number, required) - ID of Store

+ request
    + Attributes (Update Store Request)

+ response 200
    + Attributes (Get Store Response)

## Store under Business [/business/{bid}/store]
+ Parameters
    + bid: `1` (number, required) - ID of Business

### Create store under Business [POST]
+ response 201
    + Attributes (Create Store)

## Store Business Hour CRUD [/store/{id}/business-hour]

### Update Store Business Hour [POST]
+ Parameters
    + id: `1` (number, required) - ID of Store

+ request
    + Attributes (Update Business Hours Request)

+ response 204 (application/json)
    + Body
# Data Structure

### Service Base (object)
+ price: `29.99` (number, required) - The price of this service per hour
+ duration: `30` (number, required) - The duration of this service in minute
+ css: `color:FFFFFF` (string, optional) - The CSS of this service
+ status: `2` (number, optional) - The status of this service, `0 - Offline`, `1 - Readonly`, `2 - Online`
+ description: `This is description` (string, optional)
+ name: `This is name` (string, required)

### Save Service Request (object)
+ cid (number, required) - The category Id of this service
+ Include (Service Base)

### Update Service Request (object)
+ cid (number, optional) - The category Id of this service
+ price: `29.99` (number, optional) - The price of this service per hour
+ duration: `30` (number, optional) - The duration of this service in minute
+ css: `color:FFFFFF` (string, optional) - The CSS of this service
+ status: `2` (number, optional) - The status of this service, `0 - Offline`, `1 - Readonly`, `2 - Online`
+ description: `This is description` (string, optional)
+ name: `This is name` (string, optional)

### Get Service Response (object)
+ sid: `1` (number, required) - Identifier of service
+ name (string, required)
+ Include (Service Base)
+ categoryId (number, required) - The category Id of this service
+ storeId (number, required) - The store Id of this service


# Group Service

## Service for Store [/store/{sid}/service]

+ Parameters
    + sid: `1` (number, required) - Id of store

### Create Service for Store [POST]

+ request
    + Attributes (Save Service Request)

+ response 201 (application/json)
    + Attributes (Get Service Response)

### Get services under Store [GET]

+ response 200 (application/json)
    + Attributes (array[Get Service Response], fixed)

## Service Operation [/service/{sid}]

+ Parameters
    + sid: `1` (number, required) - Id of service

### Get Service [GET]

+ response 200 (application/json)
    + Attributes (Get Service Response)

### Update Service [PUT]
+ request
    + Attributes (Update Service Request)

+ response 200 (application/json)
    + Attributes (Get Service Response)

# Data Structure

### Get Store Of Employee (object)
+ sid: `123` (number, required) - Identifier of store
+ bid: `3` (number, required) - Identifier of business that the store under of
+ name: `Rugal Dental` (string, required) - The name of this store
+ permission: 1, 1, 2, 0, 1 (array[number], required) - The permission set of the employee in this store, index from 0 to 4 indicates `BUSINESS_INFO(0)`, `CALENDAR(1)`, `SERVICE(2)`, `CUSTOMER(3)`, `EMPLOYEE(4)` respectively. With `0` in the array means `No Permission`, `1` represents `Read-Only` and `2` is `Read-Write` permission.


### Get Employee brief response (object)
+ uid: `123` (number, required) - Identifier of employee
+ avatar: `https://host/path` (string, optional) - The avatar of employee
+ displayName: `Rugal` (string, optional) - The employee set name that to be displayed
+ title: `admin` (string, required) - The title of this employee in business

# Group Employee

## Employee Related Operations [/employee/store]

### List stores of employee [GET]
+ request
    + Headers

            uid: {uid}

+ response 200 (application/json)
    + Attributes (array[Get Store Of Employee], fixed)

FORMAT: 1A
HOST: http://apointer.ca

# API documentation for Union

# Group General
Please refer to [Decision Graph](http://clojure-liberator.github.io/liberator/assets/img/decision-graph.svg) for details.  

## General HTTP status code
As HTTP status code contains a lot of information, here we demonstration some of them so we can use them directly in our response.  

### 200
This is the most common status code. It basically means things are going well.  
But usually it returns together with response body.  
Mostly for `GET` request.  

### 201
This status code indicates the requested resource has been created.  
Response body should be returned together.  
Mostly for `POST` request.  

### 204
Similar to `200`, but nothing would come together with this status.  
Mostly for `DELETE` and `PUT` requests.  

## General HTTP status error code

To avoid redundent error code declaration, here we list all the default meaning of corresponding error code.  
Please explicitly in each response if the response is different from what state here.  

### 400
Malformed request, this request is reported.  
### 401
This request is not authorized.  
### 403
This request doesn't have permission to access the resource.  
### 404
The target resource not found.  
### 405
HTTP request method not found.  
### 406
The request parameters and headers not acceptable.  
Please change it according to documentation.  
### 409
Usually happens when creating a resource that already exists.  

# Data Structure

## Pagination (object)
+ pageNumber: `1` (number, required) - The current page number, start from `1`
+ pageSize: `10` (number, required) - The number of record in each page. The minimum size is `5`
+ totalPage: `3` (number, required) - The total number of pages, minimum is `1`

# Data Structure

### Get Simple Category (object)
+ cid: `10` (number, required) - The ID of category
+ name: `The test` (string, required) - The name of category

### Save Category Request (object)
+ name: `Medical Treatment` (string, required) - The name of category
+ description: `something here` (string, optional)
+ avatar: `http://host/path` (string, optional)
+ parentCid (number, optional) - The parent of this category. Null or blank value indicates this is a root category

### Get Category Response (object)
+ cid: `1` (number, required) - The ID of category
+ Include (Save Category Request)
+ children (array[Get Simple Category], fixed) - A list of sub-category under current category

# Group Category

## Category CRUD [/category/{id}]

### Get category by ID [GET]
+ Parameters
    + id: `12` (number, required) - ID of category

+ response 200 (application/json)
    + Attributes (Get Category Response)

## Root Category [/category]

### Get all root category [GET]

+ response 200 (application/json)
    + Attributes (array[Get Simple Category], fixed)

### Save category [POST]

+ request
    + Attributes (Save Category Request)

+ response 201 (application/json)
    + Attributes (Get Category Response)

# Data Structure

### Get Business Response (object)
+ bid: `1` (number, required) - The Id of this business
+ name: `Rugal Dental Clinic` (string, required)
+ license: `123-3321-2123-3321` (string, required)
+ phone: `1234567890` (string, optional)
+ email: `test@email.com` (string, optional)
+ backgroundImage: `http://host/path` (string, optional) - The background image of this business
+ avatar: `http://host/path` (string, optional) - The avatar of this business
+ website: `http://host/path` (string, optional) - The URL of this business

### Save Business Request (object)
+ name: `Rugal Auto Service` (string, required)
+ license: `123-3321-2123-3321` (string, required)
+ uid: `13` (number, required) - The Uid of the business owner

### Update Business Request (object)
+ name: `Rugal Auto Service` (string, optional)
+ phone: `1234567890` (string, optional)
+ email: `test@email.com` (string, optional)
+ website: `http://host/path` (string, optional) - The URL of this business

### Create Store (object)
+ sid: `2` (number, required) - The Id of store
+ bid: `1` (number, required) - The Id of business associated with the store

### Get Stores (object)
+ sid: `2` (number, required) - The Id of store
+ name: `Rugal Automobile Yonge Finch shop` (string, optional)

# Group Business

## Business CRUD [/business/{id}]

### Get business by ID [GET]
+ Parameters
    + id: `1` (number, required) - ID of business

+ response 200 (application/json)
    + Attributes (Get Business Response)

### Update business by ID [PUT]
+ Parameters
    + id: `1` (number, required) - ID of business

+ request
    + Attributes (Update Business Request)

+ response 204
    + Body

### Save business [POST]
Create the business along with the first store and full permission workspace.  
This should only be called after verifying business information.  

+ request
    + Attributes (Save Business Request)

+ response 201 (application/json)
    + Attributes (Create Store)

## Store under Business Operation [/business/{id}/store]

### Get Store Under Business [GET]
+ Parameters
    + id: `1` (number, required) - ID of business

+ response 200 (application/json)
    + Attributes (array[Get Stores], fixed)

## Avatar Operation [/business/{id}/avatar]

### Update Business Avatar [POST]
Please use `name=file` and set the `filename` as the original file name.  
Do not forget to set the `Content-Type`. Â 

+ Parameters
    + id: `1` (number, required) - ID of business

+ Request (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="file"; filename="image.jpg"
        Content-Type: image/jpeg
        Content-Transfer-Encoding: base64

        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY

+ response 201
    + Body

+ response 503
This means Aws S3 is down.  
    + Body
# Data Structure

### Update Address (object)
+ line1: `123 test rd` (string, optional)
+ line2: `special line` (string, optional)
+ city: `Toronto` (string, optional)
+ province: `Ontario` (string, optional)
+ country: `Canada` (string, optional)
+ zip: `X0X0X0` (string, optional)

### Address Response (object)
+ aid: `23` (number, required) - The Id of address
+ line1: `123 test rd` (string, required)
+ line2: `special line` (string, optional)
+ city: `Toronto` (string, required)
+ province: `Ontario` (string, required)
+ country: `Canada` (string, required)
+ zip: `X0X0X0` (string, required)
+ longitude: `12.34` (number, optional)
+ latitude: `21.43` (number, optional)

### Business Hour Response (object)
+ weekDay: `3` (number, required) - The day in one week, from `1` to `7` to indicate `Monday` to `Sunday`
+ beginAt: `915` (number, required) - The begin time of a day, from `0` to `2400` to indicate hour and minute
+ endAt: `1730` (number, required) - The begin time of a day, from `0` to `2400` to indicate hour and minute

### Get Store Response (object)
+ sid: `1` (number, required) - The Id of this Store
+ cid: `3` (number, required) - The category Id of this store
+ bid: `6` (number, required) - The business Id of this store
+ timezone: `-4` (number, required)
+ address (Address Response, required)
+ businessHours (array[Business Hour Response], fixed) - A list of business hour of this store, order by day of week
+ name: `Rugal Dental Clinic` (string, required)
+ url: `rugal-test-store` (string, required)
+ description: `This is description` (string, optional)
+ phone: `1234567890` (string, required)
+ email: `test@email.com` (string, required)
+ website: `http://host.com` (string, optional)

### Update Store Request (object)
+ cid: `3` (number, optional) - The category Id of this store
+ timezone: `-1` (number, optional)
+ address (Update Address, optional)
+ name: `Rugal Dental Clinic` (string, optional)
+ url: `rugal-test-shop` (string, optional) - A dash separated all lower case string, leave it null or stay it the same with previous one if you do not want to change it
+ description: `This is description` (string, optional)
+ phone: `1234567890` (string, optional)
+ email: `test@email.com` (string, optional)
+ website: `http://host.com` (string, optional)

### Update Business Hours Request (object)
+ businessHours (array[Business Hour Response], fixed)

# Group Store

## Store CRUD [/store/{id}]

### Get Store by ID [GET]
+ Parameters
    + id: `1` (number, required) - ID of Store

+ response 200 (application/json)
    + Attributes (Get Store Response)

### Update Store by ID [PUT]
+ Parameters
    + id: `1` (number, required) - ID of Store

+ request
    + Attributes (Update Store Request)

+ response 200
    + Attributes (Get Store Response)

+ response 303
This indicates the specified URL already exists, please choose another one
    + Body

+ response 400
This indicates the specified URL is not valid, please follow the format `[a-z0-9]+(-[a-z0-9]+)*`
    + Body


## Store under Business [/business/{bid}/store]
+ Parameters
    + bid: `1` (number, required) - ID of Business

### Create store under Business [POST]
+ response 201
    + Attributes (Create Store)

## Store Business Hour CRUD [/store/{id}/business-hour]

### Update Store Business Hour [POST]
+ Parameters
    + id: `1` (number, required) - ID of Store

+ request
    + Attributes (Update Business Hours Request)

+ response 204 (application/json)
    + Body
# Data Structure

### Service Base (object)
+ price: `29.99` (number, required) - The price of this service per hour
+ duration: `30` (number, required) - The duration of this service in minute
+ css: `color:FFFFFF` (string, optional) - The CSS of this service
+ status: `2` (number, optional) - The status of this service, `0 - Offline`, `1 - Readonly`, `2 - Online`
+ description: `This is description` (string, optional)
+ name: `This is name` (string, required)

### Save Service Request (object)
+ cid (number, required) - The category Id of this service
+ Include (Service Base)

### Update Service Request (object)
+ cid (number, optional) - The category Id of this service
+ price: `29.99` (number, optional) - The price of this service per hour
+ duration: `30` (number, optional) - The duration of this service in minute
+ css: `color:FFFFFF` (string, optional) - The CSS of this service
+ status: `2` (number, optional) - The status of this service, `0 - Offline`, `1 - Readonly`, `2 - Online`
+ description: `This is description` (string, optional)
+ name: `This is name` (string, optional)

### Get Service Response (object)
+ sid: `1` (number, required) - Identifier of service
+ name (string, required)
+ Include (Service Base)
+ cid (number, required) - The category Id of this service
+ storeId (number, required) - The store Id of this service

### Get Service Response With Employee (object)
+ Include (Get Service Response)
+ employees (array[Check Availability Employee Response], optional) - Employees that provide this service

# Group Service

## Service for Store [/store/{sid}/service{?withEmployee,permission}]

+ Parameters
    + sid: `1` (number, required) - Id of store

### Create Service for Store [POST]

+ request
    + Attributes (Save Service Request)

+ response 201 (application/json)
    + Attributes (Get Service Response)

### Get services under Store [GET]
+ Parameters
    + withEmployee: `false` (boolean, optional) - Whether to include employees basic information
        + Default: `false`
    + permission: `2` (number, optional) - The permission to search with
        + Default: `2`

+ response 200 (application/json)
    + Attributes (array[Get Service Response With Employee], fixed)

## Service Operation [/service/{sid}]

+ Parameters
    + sid: `1` (number, required) - Id of service

### Get Service [GET]

+ response 200 (application/json)
    + Attributes (Get Service Response)

### Update Service [PUT]
+ request
    + Attributes (Update Service Request)

+ response 200 (application/json)
    + Attributes (Get Service Response)

### Delete Service [DELETE]
This operation will only soft delete the service.

+ response 204
    + Body

# Data Structure

### Save Service Case Request (object)
+ uid: `1` (number, required) - Identifier of user
+ sid: `1` (number, required) - Identifier of service

### Get Service Case Response (object)
+ scid: `1` (number, required) - Identifier of service case
+ uid: `1` (number, required) - Identifier of user
+ serviceId: `1` (number, required) - Identifier of service

# Group Service Case

## Employee under Service [/service/{sid}/employee]
+ Parameters
    + sid: `1` (number, required) - Id of service

### Get Employee under Service [GET]

+ response 200 (application/json)
    + Attributes (array[Get Service Case Response], fixed)

## Service Case CRUD [/service-case/{scid}]

### Save Service Case for Employee [POST]

+ request (application/json)
    + Attributes (Save Service Case Request)

+ response 201 (application/json)
    + Attributes (Get Service Case Response)

### Delete Service Case [DELETE]

+ Parameters
    + scid: `1` (number, required) - Id of service case

+ response 204
    + Body

### Get Service Case [GET]

+ Parameters
    + scid: `1` (number, required) - Id of service case

+ response 200 (application/json)
    + Attributes (Get Service Case Response)

# Data Structure

### Get Store Of Employee (object)
+ sid: `123` (number, required) - Identifier of store
+ url: `rugal-test-store` (string, required)
+ name: `Rugal Dental` (string, required) - The name of this store
+ permission: 1, 1, 2, 0, 1 (array[number], required) - The permission set of the employee in this store, index from 0 to 4 indicates `BUSINESS_INFO(0)`, `CALENDAR(1)`, `SERVICE(2)`, `CUSTOMER(3)`, `EMPLOYEE(4)` respectively. With `0` in the array means `No Permission`, `1` represents `Read-Only` and `2` is `Read-Write` permission.

### Output Employee Response (object)
+ uid: 1 (number, required) - Id of an existing employee

### Get Employees Response (Output Employee Response)
+ Include Create Employee Request

### Create Employee Request (object)
+ firstName: `Jasper` (string, required) - The first name of the existing employee to be displayed at Summerhill
+ lastName: `Zhao` (string, required) - The last name of the existing employee to be displayed at Summerhill
+ email: `employee@apointer.ca` (string, required) - The work email of the existing employee to be displayed at Summerhill
+ phone: `4167895678` (string, optional) - The work phone number of the existing employee to be displayed at Summerhill
+ avatar: `http://amazon.s3.com/avatar.img` (string, optional) - The Amazon S3 public url to access the existing employee's work avatar
+ title: `Dr. Jasper` (string, required) - The work tile of the existing employee to be displayed at Summerhill
+ description: `Have 5 years experience` (string, required) - The work description of the existing employee to be displayed at Summerhill
+ showOnPage: 1 (number, required) - Whether display this employee at Summerhill (1 - display, 0 - not display)
+ permission: 2, 1, 1, 1, 1 (array[number], required) - The permission of the existing employee at Wellesley
+ services: 1, 2, 3, 4, 5, 6 (array[number], optional) - The list of ids of services an existing employee is able to offer at a particular store

### Update Employee Request (Output Employee Response)
+ firstName: `Jasper` (string, optional) - The new first name of this existing employee to be displayed at Summerhill
+ lastName: `Zhao` (string, optional) - The new last name of this existing employee to be displayed at Summerhill
+ email: `employee@apointer.ca` (string, optional) - The new work email of this existing employee to be displayed at Summerhill
+ phone: `4167895678` (string, optional) - The new work phone number of this existing employee to be displayed at Summerhill
+ avatar: `http://amazon.s3.com/avatar.img` (string, optional) - The Amazon S3 public url to access this existing employee's new work avatar
+ title: `Dr. Jasper` (string, optional) - The new work tile of this existing employee to be displayed at Summerhill
+ description: `Have 5 years experience` (string, optional) - The new work description of this existing employee to be displayed at Summerhill
+ showOnPage: 1 (number, optional) - The new status of whether display this employee at Summerhill (1 - display, 0 - not display)
+ permission: 2, 1, 1, 1, 1 (array[number], optional) - The new permission of this existing employee at Wellesley
+ services: 1, 2, 3, 4, 5, 6 (array[number], optional) - The new list of ids of services this existing employee is able to offer at a particular store

# Group Employee

## Employee Related Stores [/employee/store]

### List stores of employee [GET]
+ request

    + Headers

            uid: {uid}

+ response 200 (application/json)

    + Attributes (array[Get Store Of Employee], fixed)

## Service of Employee [/employee/{uid}/service]
+ Parameters

    + uid: `1` (number, required) - Id of user

### Get Service of Employee [GET]

+ response 200 (application/json)

    + Attributes (array[Get Service Case Response], fixed)

## Employees of Store [/employee/store/{sid}]
+ Parameters

    + sid: 1 (number, required) - Id of a store

### Get Employees of a Store [GET]

+ response 200 (application/json)
Return the information details of all employees working at this store

    + Attributes (array[Get Employees Response], fixed)

+ response 404
No employees are found at this store or the requested store does not exist

    + Body

## An Employee of Store [/employee]

### Create a New Employee at a Store [POST]

+ request (application/json)

    + Attributes (Create Employee Request)

    + Headers

            sid: 1 (number, required) - Id of a store

+ response 201 (application/json)
Successfully created a new employee at the particular store and his/her information details are returned

    + Attributes (Get Employees Response)

+ response 404
The requested store does not exist

    + Body

+ response 409
The new employee already exists at this store

    + Body

+ response 500
The new employee failed to be created at Dundas. Therefore, Union also failed to create this new employee

    + Body

### Update an Existing Employee at a Store [PUT]

+ request (application/json)

    + Attributes (Update Employee Request)

    + Headers

            sid: 1 (number, required) - Id of a store

+ response 201 (application/json)
The information of the existing employee is updated and his/her new details are returned

    + Attributes (Get Employees Response)

+ response 404
No employee is found or the requested store does not exist

    + Body

## Delete an Employee from a Store [/employee/{uid}/store/{sid}]
+ parameters

    + uid: 1 (number, required) - Id of an existing employee
    + sid: 1 (number, required) - Id of an existing store

### Delete Employee [DELETE]

+ response 200 (application/json)
The given employee is deleted from the particular store and his/her old details are returned

    + Attributes (Get Employees Response)

+ response 404
No employee is found or the given store does not exist

    + Body

# Data Structure

### Check Availability Employee Response (object)
+ uid: `123` (number, required) - Id of employee
+ firstName: `Rugal` (string, required)
+ lastName: `Bernstein` (string, required)
+ title: `Junior Developer` (string, optional)
+ description: `This is description` (string, optional)
+ phone: `1231231234` (string, optional)
+ avatar: `http://localhost/path` (string, optional)

### Check Availability Response (object)
+ beginAt: `1521682344` (number, required) - Unix timestamp of appointment begin time
+ endAt: `1521682344` (number, required) - Unix timestamp of appointment end time
+ scid: `23` (number, required) - Id of Service Case
+ employee (Check Availability Employee Response, required) - The employee to carry on the service

### Hold Appointment Request (object) 
+ from: `1521682344` (number, required) - Unix timestamp of appointment begin time
+ scid: `23` (number, required) - Id of Service Case

### Hold Appointment Response (object)
+ aid: `23` (number, required) - Id of Appointment
+ scid: `23` (number, required) - Id of Service Case
+ beginAt: `1521682344` (number, required) - Unix timestamp of appointment begin time
+ endAt: `1521682344` (number, required) - Unix timestamp of appointment end time
+ status: `1` (number, required) - 0: Cancel, 1: Hold, 2:Confirm

# Group Appointment

## Query Appointment [/appointment{?serviceId,from,to,employeeId}]

### Check Appointment Availability [GET]
+ Parameters
    + serviceId: `999` (number, required) - Id of service
    + from: `1521682344` (number, required) - Search start time in `second` unit
    + to: `1521682360` (number, required) - Search end time in `second` unit
    + employeeId: `123` (number, optional) - Id of employee

+ response 200 (application/json)
    + Attributes (array[Check Availability Response], fixed)

### Create and Hold Appointment [POST]

+ request
    + Attributes (Hold Appointment Request)

+ response 201 (application/json)
    + Attributes (Hold Appointment Response)

## Appointment API [/appointment/{aid}]

+ Parameters
    + aid: `999` (number, required) - Id of Appointment

### Cancel Appointment [DELETE]
Cancel Appointment only when it is confirmed.

+ response 204
    + Body

+ response 304
If this appointment is not in CONFIRM status.

    + Body

### Confirm Appointment [PUT]
Confirm Appointment with corresponding customer information.

+ response 200 (application/json)
    + Attributes (Hold Appointment Response)

+ response 304
If this appointment is already in CONFIRM status.

    + Body
